// Copyright (C) 2022 - 2024 ANSYS, Inc. and/or its affiliates.
// SPDX-License-Identifier: MIT
//
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";
package ansys.api.acp.v0.modeling_ply;

import "ansys/api/acp/v0/base.proto";
import "ansys/api/acp/v0/enum_types.proto";
import "ansys/api/acp/v0/array_types.proto";
import "ansys/api/acp/v0/ply_material.proto";
import "ansys/api/acp/v0/linked_selection_rule.proto";

enum ThicknessType {
    NOMINAL = 0;
    FROM_GEOMETRY = 1;
    FROM_TABLE = 2;
}

enum ThicknessFieldType {
    ABSOLUTE_VALUES = 0;
    RELATIVE_SCALING_FACTOR = 1;
}

message TaperEdge {
    base.ResourcePath edge_set = 1;
    double angle = 2;
    double offset = 3;
}

message Properties {
    enum_types.StatusType status = 1;
    repeated base.ResourcePath oriented_selection_sets = 2;
    base.ResourcePath ply_material = 3;
    double ply_angle = 4;
    int64 number_of_layers = 5;
    bool active = 6;
    int64 global_ply_nr = 7;

    // draping-related properties
    ply_material.DrapingType draping = 8;
    array_types.DoubleArray draping_seed_point = 9;
    bool auto_draping_direction = 10;
    array_types.DoubleArray draping_direction = 11;
    bool use_default_draping_mesh_size = 12;
    double draping_mesh_size = 13;
    bool draping_thickness_correction = 14;
    base.ResourcePath draping_angle_1_field = 15;
    base.ResourcePath draping_angle_2_field = 16;

    repeated linked_selection_rule.LinkedSelectionRule selection_rules = 17;

    // variable thickness
    ThicknessType thickness_type = 18;
    base.ResourcePath thickness_geometry = 19;
    base.ResourcePath thickness_field = 20;
    ThicknessFieldType thickness_field_type = 21;

    // taper edges
    repeated TaperEdge taper_edges = 22;
}

message ObjectInfo {
    base.BasicInfo info = 1;
    Properties properties = 2;
}

message ListReply { repeated ObjectInfo objects = 1; }

message CreateRequest {
    base.CollectionPath collection_path = 1;
    string name = 2;
    Properties properties = 3;
}

service ObjectService {
    rpc List(base.ListRequest) returns (ListReply);

    rpc Get(base.GetRequest) returns (ObjectInfo);

    rpc Put(ObjectInfo) returns (ObjectInfo);

    rpc Delete(base.DeleteRequest) returns (base.Empty);

    rpc Create(CreateRequest) returns (ObjectInfo);
}
