// Copyright (C) 2022 - 2024 ANSYS, Inc. and/or its affiliates.
// SPDX-License-Identifier: MIT
//
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";
package ansys.api.acp.v0.imported_modeling_ply;

import "ansys/api/acp/v0/base.proto";
import "ansys/api/acp/v0/enum_types.proto";
import "ansys/api/acp/v0/ply_material.proto";
import "ansys/api/acp/v0/modeling_ply.proto";

enum MeshImportType {
    FROM_H5_COMPOSITE_CAE = 0;
    FROM_GEOMETRY = 1;
};

message Properties {
    enum_types.StatusType status = 1;
    bool active = 2;

    // IMPORTED MESH PROPERTIES
    enum_types.OffsetType offset_type = 3;
    // The 'FROM_H5_COMPOSITE_CAE' mesh import type can only be created
    // via the Composite CAE H5 import. Manually created imported plies are
    // always of type 'FROM_GEOMETRY'.
    MeshImportType mesh_import_type = 4;
    base.ResourcePath mesh_geometry = 5;

    // REFERENCE DIRECTION
    enum_types.RosetteSelectionMethod rosette_selection_method = 6;
    repeated base.ResourcePath rosettes = 7;
    base.ResourcePath reference_direction_field = 8;
    double rotation_angle = 9;

    // MATERIAL PROPERTIES
    // Only fabrics are supported as ply material
    base.ResourcePath ply_material = 10;
    double ply_angle = 11;

    // DRAPING-RELATED PROPERTIES
    // The 'INTERNAL_DRAPING' draping type is not supported for imported plies
    ply_material.DrapingType draping = 12;
    base.ResourcePath draping_angle_1_field = 13;
    base.ResourcePath draping_angle_2_field = 14;

    // VARIABLE THICKNESS
    // The 'FROM_GEOMETRY' thickness type is not supported for imported plies
    modeling_ply.ThicknessType thickness_type = 15;
    base.ResourcePath thickness_field = 16;
    // The thickness_field_type is discarded when the thickness_field is not set
    modeling_ply.ThicknessFieldType thickness_field_type = 17;
}

message ObjectInfo {
    base.BasicInfo info = 1;
    Properties properties = 2;
}

message ListReply { repeated ObjectInfo objects = 1; }

message CreateRequest {
    base.CollectionPath collection_path = 1;
    string name = 2;
    Properties properties = 3;
}

service ObjectService {
    rpc List(base.ListRequest) returns (ListReply);

    rpc Get(base.GetRequest) returns (ObjectInfo);

    rpc Put(ObjectInfo) returns (ObjectInfo);

    rpc Delete(base.DeleteRequest) returns (base.Empty);

    rpc Create(CreateRequest) returns (ObjectInfo);

    // Custom methods
}
