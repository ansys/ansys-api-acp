// Copyright (C) 2022 - 2024 ANSYS, Inc. and/or its affiliates.
// SPDX-License-Identifier: MIT
//
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";
package ansys.api.acp.v0.enum_types;

// the initializers are different in the backend but here it has to be
// zero-based
enum StatusType {
    UNKNOWN = 0;
    UPTODATE = 1;
    NOTUPTODATE = 2;
}

enum RosetteSelectionMethod {
    MINIMUM_ANGLE = 0;
    MAXIMUM_ANGLE = 1;
    MINIMUM_DISTANCE = 2;
    MINIMUM_ANGLE_SUPERPOSED = 3;
    MAXIMUM_ANGLE_SUPERPOSED = 4;
    MINIMUM_DISTANCE_SUPERPOSED = 5;
    ANSYS_CLASSIC = 6;
    DIRECTIONS_FROM_TABULAR_VALUES = 7;
}

// defines the ply type which is used for instance by the solid model
// extrusion and the post-processing to distinguish between isotropic,
// reinforced, and core materials
enum PlyType {
    REGULAR = 0;
    WOVEN = 1;
    ORTHOTROPIC_HOMOGENEOUS_CORE = 2;
    ISOTROPIC_HOMOGENEOUS_CORE = 3;
    HONEYCOMB_CORE = 4;
    ISOTROPIC = 5;
    UNDEFINED = 6;
    ADHESIVE = 7;
}

// Defines the type of linked selection rules.
// This is used in Boolean Selection Rules, and in the selection rules
// for Modeling Plies.
enum BooleanOperationType {
    INTERSECT = 0;
    ADD = 1;
    REMOVE = 2;
}
